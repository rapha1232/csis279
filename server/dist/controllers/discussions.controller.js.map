{"version":3,"sources":["../../src/controllers/discussions.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { Container } from 'typedi';\nimport { Topics } from '@prisma/client';\nimport { DiscussionsService } from '@/services/discussions.service';\n\nexport class DiscussionsController {\n  public d = Container.get(DiscussionsService);\n\n  public getAll = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const allTopics: Topics[] = await this.d.getAll();\n      res.status(201).json({ data: allTopics, message: 'get All Topics' });\n    } catch (error) {\n      next(error);\n    }\n  };\n  public likeTopic = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { TopicID, UserID } = req.query;\n      await this.d.likeTopic(Number(TopicID), Number(UserID));\n      res.status(201).json({ message: 'liked Topic' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public unlikeTopic = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { TopicID, UserID } = req.query;\n      await this.d.unlikeTopic(Number(TopicID), Number(UserID));\n      res.status(201).json({ message: 'unliked Topic' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public saveTopic = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { TopicID, UserID } = req.query;\n      await this.d.saveTopic(Number(TopicID), Number(UserID));\n      res.status(201).json({ message: 'saved Topic' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public unsaveTopic = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { TopicID, UserID } = req.query;\n      await this.d.unsaveTopic(Number(TopicID), Number(UserID));\n      res.status(201).json({ message: 'unsaved Topic' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public filtered = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { q, search } = req.query;\n      if (q === 'all' || q === 'popular' || q === 'recent' || q === 'name' || q === 'old') {\n        const filteredTopics: Topics[] = await this.d.filtered(q, String(search));\n        res.status(201).json({ data: filteredTopics, message: 'filtered Topics' });\n      } else {\n        res.status(400).json({ message: 'Invalid query parameter' });\n      }\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public create = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { Title, Content, CreatedAt, CreatorID } = req.body;\n      const newTopic = await this.d.create(Title, Content, CreatedAt, Number(CreatorID));\n      res.status(201).json({ data: newTopic, message: 'created Topic' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getOne = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { TopicID } = req.query;\n      const q = await this.d.getOne(Number(TopicID));\n      res.status(201).json({ data: q, message: 'getOne Topic' });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"],"names":["DiscussionsController","d","Container","get","DiscussionsService","getAll","req","res","next","allTopics","status","json","data","message","error","likeTopic","TopicID","UserID","query","Number","unlikeTopic","saveTopic","unsaveTopic","filtered","q","search","filteredTopics","String","create","Title","Content","CreatedAt","CreatorID","body","newTopic","getOne"],"mappings":"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"}