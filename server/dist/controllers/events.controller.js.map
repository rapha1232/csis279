{"version":3,"sources":["../../src/controllers/events.controller.ts"],"sourcesContent":["import { Events } from '@prisma/client';\nimport { EventsService } from '@services/events.service';\nimport { NextFunction, Request, Response } from 'express';\nimport { Container } from 'typedi';\n\nexport class EventsController {\n  public e = Container.get(EventsService);\n\n  public getAll = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const allEvents: Events[] = await this.e.getAll();\n      res.status(201).json({ data: allEvents, message: 'get All Events' });\n    } catch (error) {\n      next(error);\n    }\n  };\n  public likeEvent = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { EventID, UserID } = req.query;\n      await this.e.likeEvent(Number(EventID), Number(UserID));\n      res.status(201).json({ message: 'liked Event' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public unlikeEvent = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { EventID, UserID } = req.query;\n      await this.e.unlike(Number(EventID), Number(UserID));\n      res.status(201).json({ message: 'unliked Event' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public saveEvent = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { EventID, UserID } = req.query;\n      await this.e.saveEvent(Number(EventID), Number(UserID));\n      res.status(201).json({ message: 'saved Event' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public unsaveEvent = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { EventID, UserID } = req.query;\n      await this.e.unsaveEvent(Number(EventID), Number(UserID));\n      res.status(201).json({ message: 'unsaved Event' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public filtered = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { q, search } = req.query;\n      if (q === 'all' || q === 'popular' || q === 'recent' || q === 'name' || q === 'old') {\n        const filteredEvents: Events[] = await this.e.filtered(q, String(search));\n        res.status(201).json({ data: filteredEvents, message: 'filtered Events' });\n      } else {\n        res.status(400).json({ message: 'Invalid query parameter' });\n      }\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public create = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { Title, Description, Date, Location, CreatorID } = req.body;\n      const newEvent = await this.e.create(Title, Description, Date, Location, Number(CreatorID));\n      res.status(201).json({ data: newEvent, message: 'created Event' });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"],"names":["EventsController","e","Container","get","EventsService","getAll","req","res","next","allEvents","status","json","data","message","error","likeEvent","EventID","UserID","query","Number","unlikeEvent","unlike","saveEvent","unsaveEvent","filtered","q","search","filteredEvents","String","create","Title","Description","Date","Location","CreatorID","body","newEvent"],"mappings":"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"}