{"version":3,"sources":["../../src/controllers/questions.controller.ts"],"sourcesContent":["import { QuestionsService } from '@/services/questions.service';\nimport { Questions } from '@prisma/client';\nimport { NextFunction, Request, Response } from 'express';\nimport { Container } from 'typedi';\n\nexport class QuestionsController {\n  public d = Container.get(QuestionsService);\n\n  public getAll = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const allQuestions: Questions[] = await this.d.getAll();\n      res.status(201).json({ data: allQuestions, message: 'get All Questions' });\n    } catch (error) {\n      next(error);\n    }\n  };\n  public likeQuestion = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { QuestionID, UserID } = req.query;\n      await this.d.likeQuestion(Number(QuestionID), Number(UserID));\n      res.status(201).json({ message: 'liked Question' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public unlikeQuestion = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { QuestionID, UserID } = req.query;\n      await this.d.unlikeQuestion(Number(QuestionID), Number(UserID));\n      res.status(201).json({ message: 'unliked Question' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public saveQuestion = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { QuestionID, UserID } = req.query;\n      await this.d.saveQuestion(Number(QuestionID), Number(UserID));\n      res.status(201).json({ message: 'saved Question' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public unsaveQuestion = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { QuestionID, UserID } = req.query;\n      await this.d.unsaveQuestion(Number(QuestionID), Number(UserID));\n      res.status(201).json({ message: 'unsaved Question' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public filtered = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { q, search } = req.query;\n      if (q === 'all' || q === 'popular' || q === 'recent' || q === 'name' || q === 'old') {\n        const filteredQuestions: Questions[] = await this.d.filtered(q, String(search));\n        res.status(201).json({ data: filteredQuestions, message: 'filtered Questions' });\n      } else {\n        res.status(400).json({ message: 'Invalid query parameter' });\n      }\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public create = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { Title, Content, CreatedAt, CreatorID } = req.body;\n      const newQuestion = await this.d.create(Title, Content, CreatedAt, Number(CreatorID));\n      res.status(201).json({ data: newQuestion, message: 'created Question' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getOne = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { QuestionID } = req.query;\n      const q = await this.d.getOne(Number(QuestionID));\n      res.status(201).json({ data: q, message: 'getOne Question' });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"],"names":["QuestionsController","d","Container","get","QuestionsService","getAll","req","res","next","allQuestions","status","json","data","message","error","likeQuestion","QuestionID","UserID","query","Number","unlikeQuestion","saveQuestion","unsaveQuestion","filtered","q","search","filteredQuestions","String","create","Title","Content","CreatedAt","CreatorID","body","newQuestion","getOne"],"mappings":"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"}