{"version":3,"sources":["../../src/controllers/users.controller.ts"],"sourcesContent":["import { User } from '@interfaces/users.interface';\nimport { UserService } from '@services/users.service';\nimport { NextFunction, Request, Response } from 'express';\nimport { Container } from 'typedi';\n\nexport class UserController {\n  public user = Container.get(UserService);\n\n  public getUsers = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const findAllUsersData: Omit<User, 'Password'>[] = await this.user.getAllUsers();\n\n      res.status(200).json({ data: findAllUsersData, message: 'findAll' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getUserInfo = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    const UserID = req.query.UserID;\n    try {\n      const userInfoData: Omit<User, 'Password'> = await this.user.getUserInfo(Number(UserID));\n      res.status(200).json({ data: userInfoData, message: 'getInfo' });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"],"names":["UserController","user","Container","get","UserService","getUsers","req","res","next","findAllUsersData","getAllUsers","status","json","data","message","error","getUserInfo","UserID","query","userInfoData","Number"],"mappings":";;;;+BAKaA;;;eAAAA;;;8BAJe;wBAEF;;;;;;;;;;;;;;AAEnB,IAAA,AAAMA,iBAAN,MAAMA;;QACX,uBAAOC,QAAOC,iBAAS,CAACC,GAAG,CAACC,yBAAW;QAEvC,uBAAOC,YAAW,OAAOC,KAAcC,KAAeC;YACpD,IAAI;gBACF,MAAMC,mBAA6C,MAAM,IAAI,CAACR,IAAI,CAACS,WAAW;gBAE9EH,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMJ;oBAAkBK,SAAS;gBAAU;YACpE,EAAE,OAAOC,OAAO;gBACdP,KAAKO;YACP;QACF;QAEA,uBAAOC,eAAc,OAAOV,KAAcC,KAAeC;YACvD,MAAMS,SAASX,IAAIY,KAAK,CAACD,MAAM;YAC/B,IAAI;gBACF,MAAME,eAAuC,MAAM,IAAI,CAAClB,IAAI,CAACe,WAAW,CAACI,OAAOH;gBAChFV,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMM;oBAAcL,SAAS;gBAAU;YAChE,EAAE,OAAOC,OAAO;gBACdP,KAAKO;YACP;QACF;;AACF"}