{"version":3,"sources":["../../src/services/events.service.ts"],"sourcesContent":["import { Events, PrismaClient } from '@prisma/client';\nimport { Service } from 'typedi';\n\n@Service()\nexport class EventsService {\n  public events = new PrismaClient().events;\n  public likes = new PrismaClient().likes;\n  public saved = new PrismaClient().saved;\n  public async getAll(): Promise<Events[]> {\n    const allEvents: Events[] = await this.events.findMany({\n      include: { CreatedBy: true, Likes: { include: { User: true } }, Saved: { include: { User: true } } },\n      orderBy: { Title: 'asc' },\n    });\n    return allEvents;\n  }\n\n  public async likeEvent(EventID: number, UserID: number): Promise<void> {\n    this.events\n      .update({\n        where: { EventID: EventID },\n        data: { LikesNB: { increment: 1 } },\n      })\n      .then(() => this.likes.create({ data: { EventID: EventID, UserID: UserID } }))\n      .catch(err => console.log(err));\n  }\n\n  public async unlike(EventID: number, UserID: number): Promise<void> {\n    this.events\n      .update({\n        where: { EventID: EventID },\n        data: { LikesNB: { decrement: 1 } },\n      })\n      .then(() => this.likes.delete({ where: { EventID_UserID: { EventID: EventID, UserID: UserID } } }))\n      .catch(err => console.log(err));\n  }\n\n  public async saveEvent(EventID: number, UserID: number): Promise<void> {\n    this.saved.create({ data: { EventID: EventID, UserID: UserID } }).catch(err => console.log(err));\n  }\n\n  public async unsaveEvent(EventID: number, UserID: number): Promise<void> {\n    this.saved.delete({ where: { EventID_UserID: { EventID: EventID, UserID: UserID } } }).catch(err => console.log(err));\n  }\n\n  public async filtered(q: 'all' | 'popular' | 'recent' | 'name' | 'old', search: string): Promise<Events[]> {\n    const allEvents: Events[] = await this.events.findMany({\n      where: {\n        Title: { contains: search, mode: 'insensitive' },\n      },\n      include: { CreatedBy: true, Likes: { include: { User: true } }, Saved: { include: { User: true } } },\n    });\n\n    switch (q) {\n      case 'all':\n        // No sorting needed\n        break;\n      case 'popular':\n        allEvents.sort((a, b) => b.LikesNB - a.LikesNB);\n        break;\n      case 'recent':\n        allEvents.sort((a, b) => b.Date.getTime() - a.Date.getTime());\n        break;\n      case 'name':\n        allEvents.sort((a, b) => a.Title.localeCompare(b.Title));\n        break;\n      case 'old':\n        allEvents.sort((a, b) => a.Date.getTime() - b.Date.getTime());\n        break;\n    }\n\n    return allEvents;\n  }\n\n  public async create(Title: string, Description: string, Date: string, Location: string, CreatorID: number): Promise<void> {\n    this.events\n      .create({ data: { Title: Title, Description: Description, Date: Date, Location: Location, CreatorID: CreatorID } })\n      .catch(err => console.log(err));\n  }\n}\n"],"names":["EventsService","getAll","allEvents","events","findMany","include","CreatedBy","Likes","User","Saved","orderBy","Title","likeEvent","EventID","UserID","update","where","data","LikesNB","increment","then","likes","create","catch","err","console","log","unlike","decrement","delete","EventID_UserID","saveEvent","saved","unsaveEvent","filtered","q","search","contains","mode","sort","a","b","Date","getTime","localeCompare","Description","Location","CreatorID","PrismaClient","Service"],"mappings":"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"}