{"version":3,"sources":["../../src/services/replies.service.ts"],"sourcesContent":["import { PrismaClient, Replies } from '@prisma/client';\nimport { Service } from 'typedi';\n\n@Service()\nexport class RepliesService {\n  public replies = new PrismaClient().replies;\n  public likes = new PrismaClient().likes;\n  public saved = new PrismaClient().saved;\n  public async getAll(QuestionID: number): Promise<Replies[]> {\n    const allReplies: Replies[] = await this.replies.findMany({\n      where: { QuestionID: QuestionID },\n      include: { CreatedBy: true, Likes: { include: { User: true } } },\n    });\n    return allReplies;\n  }\n\n  public async likeReply(ReplyID: number, UserID: number): Promise<void> {\n    this.replies\n      .update({\n        where: { ReplyID: ReplyID },\n        data: { LikesNB: { increment: 1 } },\n      })\n      .then(() => this.likes.create({ data: { ReplyID: ReplyID, UserID: UserID } }))\n      .catch(err => console.log(err));\n  }\n\n  public async unlikeReply(ReplyID: number, UserID: number): Promise<void> {\n    this.replies\n      .update({\n        where: { ReplyID: ReplyID },\n        data: { LikesNB: { decrement: 1 } },\n      })\n      .then(() => this.likes.delete({ where: { ReplyID_UserID: { ReplyID: ReplyID, UserID: UserID } } }))\n      .catch(err => console.log(err));\n  }\n\n  public async filtered(q: 'all' | 'popular' | 'recent' | 'name' | 'old', QuestionID: number): Promise<Replies[]> {\n    const allreplies: Replies[] = await this.replies.findMany({\n      where: { QuestionID: QuestionID },\n      include: { CreatedBy: true, Likes: { include: { User: true } } },\n    });\n\n    switch (q) {\n      case 'all':\n        // No sorting needed\n        break;\n      case 'popular':\n        allreplies.sort((a, b) => b.LikesNB - a.LikesNB);\n        break;\n      case 'recent':\n        allreplies.sort((a, b) => b.CreatedAt.getTime() - a.CreatedAt.getTime());\n        break;\n      case 'name':\n        allreplies.sort((a, b) => a.Content.localeCompare(b.Content));\n        break;\n      case 'old':\n        allreplies.sort((a, b) => a.CreatedAt.getTime() - b.CreatedAt.getTime());\n        break;\n    }\n\n    return allreplies;\n  }\n\n  public async createQuestionReply(Content: string, CreatedAt: string, CreatorID: number, QuestionID: number): Promise<void> {\n    this.replies\n      .create({ data: { Content: Content, CreatedAt: CreatedAt, CreatorID: CreatorID, QuestionID: QuestionID } })\n      .catch(err => console.log(err));\n  }\n\n  public async createTopicReply(Content: string, CreatedAt: string, CreatorID: number, TopicID: number): Promise<void> {\n    this.replies.create({ data: { Content: Content, CreatedAt: CreatedAt, CreatorID: CreatorID, TopicID: TopicID } }).catch(err => console.log(err));\n  }\n}\n"],"names":["RepliesService","getAll","QuestionID","allReplies","replies","findMany","where","include","CreatedBy","Likes","User","likeReply","ReplyID","UserID","update","data","LikesNB","increment","then","likes","create","catch","err","console","log","unlikeReply","decrement","delete","ReplyID_UserID","filtered","q","allreplies","sort","a","b","CreatedAt","getTime","Content","localeCompare","createQuestionReply","CreatorID","createTopicReply","TopicID","PrismaClient","saved","Service"],"mappings":";;;;+BAIaA;;;eAAAA;;;wBAJyB;wBACd;;;;;;;;;;;;;;;;;;;;IAGXA,iBAAN;IAIL,MAAaC,OAAOC,UAAkB,EAAsB;QAC1D,MAAMC,aAAwB,MAAM,IAAI,CAACC,OAAO,CAACC,QAAQ,CAAC;YACxDC,OAAO;gBAAEJ,YAAYA;YAAW;YAChCK,SAAS;gBAAEC,WAAW;gBAAMC,OAAO;oBAAEF,SAAS;wBAAEG,MAAM;oBAAK;gBAAE;YAAE;QACjE;QACA,OAAOP;IACT;IAEA,MAAaQ,UAAUC,OAAe,EAAEC,MAAc,EAAiB;QACrE,IAAI,CAACT,OAAO,CACTU,MAAM,CAAC;YACNR,OAAO;gBAAEM,SAASA;YAAQ;YAC1BG,MAAM;gBAAEC,SAAS;oBAAEC,WAAW;gBAAE;YAAE;QACpC,GACCC,IAAI,CAAC,IAAM,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC;gBAAEL,MAAM;oBAAEH,SAASA;oBAASC,QAAQA;gBAAO;YAAE,IAC1EQ,KAAK,CAACC,CAAAA,MAAOC,QAAQC,GAAG,CAACF;IAC9B;IAEA,MAAaG,YAAYb,OAAe,EAAEC,MAAc,EAAiB;QACvE,IAAI,CAACT,OAAO,CACTU,MAAM,CAAC;YACNR,OAAO;gBAAEM,SAASA;YAAQ;YAC1BG,MAAM;gBAAEC,SAAS;oBAAEU,WAAW;gBAAE;YAAE;QACpC,GACCR,IAAI,CAAC,IAAM,IAAI,CAACC,KAAK,CAACQ,MAAM,CAAC;gBAAErB,OAAO;oBAAEsB,gBAAgB;wBAAEhB,SAASA;wBAASC,QAAQA;oBAAO;gBAAE;YAAE,IAC/FQ,KAAK,CAACC,CAAAA,MAAOC,QAAQC,GAAG,CAACF;IAC9B;IAEA,MAAaO,SAASC,CAAgD,EAAE5B,UAAkB,EAAsB;QAC9G,MAAM6B,aAAwB,MAAM,IAAI,CAAC3B,OAAO,CAACC,QAAQ,CAAC;YACxDC,OAAO;gBAAEJ,YAAYA;YAAW;YAChCK,SAAS;gBAAEC,WAAW;gBAAMC,OAAO;oBAAEF,SAAS;wBAAEG,MAAM;oBAAK;gBAAE;YAAE;QACjE;QAEA,OAAQoB;YACN,KAAK;gBAEH;YACF,KAAK;gBACHC,WAAWC,IAAI,CAAC,CAACC,GAAGC,IAAMA,EAAElB,OAAO,GAAGiB,EAAEjB,OAAO;gBAC/C;YACF,KAAK;gBACHe,WAAWC,IAAI,CAAC,CAACC,GAAGC,IAAMA,EAAEC,SAAS,CAACC,OAAO,KAAKH,EAAEE,SAAS,CAACC,OAAO;gBACrE;YACF,KAAK;gBACHL,WAAWC,IAAI,CAAC,CAACC,GAAGC,IAAMD,EAAEI,OAAO,CAACC,aAAa,CAACJ,EAAEG,OAAO;gBAC3D;YACF,KAAK;gBACHN,WAAWC,IAAI,CAAC,CAACC,GAAGC,IAAMD,EAAEE,SAAS,CAACC,OAAO,KAAKF,EAAEC,SAAS,CAACC,OAAO;gBACrE;QACJ;QAEA,OAAOL;IACT;IAEA,MAAaQ,oBAAoBF,OAAe,EAAEF,SAAiB,EAAEK,SAAiB,EAAEtC,UAAkB,EAAiB;QACzH,IAAI,CAACE,OAAO,CACTgB,MAAM,CAAC;YAAEL,MAAM;gBAAEsB,SAASA;gBAASF,WAAWA;gBAAWK,WAAWA;gBAAWtC,YAAYA;YAAW;QAAE,GACxGmB,KAAK,CAACC,CAAAA,MAAOC,QAAQC,GAAG,CAACF;IAC9B;IAEA,MAAamB,iBAAiBJ,OAAe,EAAEF,SAAiB,EAAEK,SAAiB,EAAEE,OAAe,EAAiB;QACnH,IAAI,CAACtC,OAAO,CAACgB,MAAM,CAAC;YAAEL,MAAM;gBAAEsB,SAASA;gBAASF,WAAWA;gBAAWK,WAAWA;gBAAWE,SAASA;YAAQ;QAAE,GAAGrB,KAAK,CAACC,CAAAA,MAAOC,QAAQC,GAAG,CAACF;IAC7I;;QAlEA,uBAAOlB,WAAU,IAAIuC,oBAAY,GAAGvC,OAAO;QAC3C,uBAAOe,SAAQ,IAAIwB,oBAAY,GAAGxB,KAAK;QACvC,uBAAOyB,SAAQ,IAAID,oBAAY,GAAGC,KAAK;;AAiEzC;AApEa5C;IADZ6C,IAAAA,eAAO;GACK7C"}