{"version":3,"sources":["../../src/services/users.service.ts"],"sourcesContent":["import { User } from '@interfaces/users.interface';\nimport { PrismaClient } from '@prisma/client';\nimport { Service } from 'typedi';\n\n@Service()\nexport class UserService {\n  public user = new PrismaClient().user;\n\n  public async getAllUsers(): Promise<Omit<User, 'Password'>[]> {\n    const allUser: Omit<User, 'Password'>[] = await this.user.findMany({\n      select: { UserID: true, FirstName: true, LastName: true, Email: true },\n    });\n    return allUser;\n  }\n\n  public async getUserInfo(UserID: number): Promise<Omit<User, 'Password'>> {\n    const userInfo: Omit<User, 'Password'> = await this.user.findUnique({\n      where: { UserID: UserID },\n      select: { UserID: true, FirstName: true, LastName: true, Email: true },\n    });\n    return userInfo;\n  }\n}\n"],"names":["UserService","getAllUsers","allUser","user","findMany","select","UserID","FirstName","LastName","Email","getUserInfo","userInfo","findUnique","where","PrismaClient","Service"],"mappings":";;;;+BAKaA;;;eAAAA;;;wBAJgB;wBACL;;;;;;;;;;;;;;;;;;;;IAGXA,cAAN;IAGL,MAAaC,cAAiD;QAC5D,MAAMC,UAAoC,MAAM,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC;YACjEC,QAAQ;gBAAEC,QAAQ;gBAAMC,WAAW;gBAAMC,UAAU;gBAAMC,OAAO;YAAK;QACvE;QACA,OAAOP;IACT;IAEA,MAAaQ,YAAYJ,MAAc,EAAmC;QACxE,MAAMK,WAAmC,MAAM,IAAI,CAACR,IAAI,CAACS,UAAU,CAAC;YAClEC,OAAO;gBAAEP,QAAQA;YAAO;YACxBD,QAAQ;gBAAEC,QAAQ;gBAAMC,WAAW;gBAAMC,UAAU;gBAAMC,OAAO;YAAK;QACvE;QACA,OAAOE;IACT;;QAfA,uBAAOR,QAAO,IAAIW,oBAAY,GAAGX,IAAI;;AAgBvC;AAjBaH;IADZe,IAAAA,eAAO;GACKf"}