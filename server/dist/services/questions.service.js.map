{"version":3,"sources":["../../src/services/questions.service.ts"],"sourcesContent":["import { PrismaClient, Questions } from '@prisma/client';\nimport { Service } from 'typedi';\n\n@Service()\nexport class QuestionsService {\n  public questions = new PrismaClient().questions;\n  public likes = new PrismaClient().likes;\n  public saved = new PrismaClient().saved;\n  public async getAll(): Promise<Questions[]> {\n    const allQuestions: Questions[] = await this.questions.findMany({\n      include: { CreatedBy: true, Likes: { include: { User: true } }, Saved: { include: { User: true } }, _count: { select: { Replies: true } } },\n      orderBy: { Title: 'asc' },\n    });\n    return allQuestions;\n  }\n\n  public async likeQuestion(QuestionID: number, UserID: number): Promise<void> {\n    this.questions\n      .update({\n        where: { QuestionID: QuestionID },\n        data: { LikesNb: { increment: 1 } },\n      })\n      .then(() => this.likes.create({ data: { QuestionID: QuestionID, UserID: UserID } }))\n      .catch(err => console.log(err));\n  }\n\n  public async unlikeQuestion(QuestionID: number, UserID: number): Promise<void> {\n    this.questions\n      .update({\n        where: { QuestionID: QuestionID },\n        data: { LikesNb: { decrement: 1 } },\n      })\n      .then(() => this.likes.delete({ where: { QuestionID_UserID: { QuestionID: QuestionID, UserID: UserID } } }))\n      .catch(err => console.log(err));\n  }\n\n  public async saveQuestion(QuestionID: number, UserID: number): Promise<void> {\n    this.saved.create({ data: { QuestionID: QuestionID, UserID: UserID } }).catch(err => console.log(err));\n  }\n\n  public async unsaveQuestion(QuestionID: number, UserID: number): Promise<void> {\n    this.saved.delete({ where: { QuestionID_UserID: { QuestionID: QuestionID, UserID: UserID } } }).catch(err => console.log(err));\n  }\n\n  public async filtered(q: 'all' | 'popular' | 'recent' | 'name' | 'old', search: string): Promise<Questions[]> {\n    const allQuestions: Questions[] = await this.questions.findMany({\n      where: {\n        Title: { contains: search, mode: 'insensitive' },\n      },\n      include: { CreatedBy: true, Likes: { include: { User: true } }, Saved: { include: { User: true } }, _count: { select: { Replies: true } } },\n    });\n\n    switch (q) {\n      case 'all':\n        // No sorting needed\n        break;\n      case 'popular':\n        allQuestions.sort((a, b) => b.LikesNb - a.LikesNb);\n        break;\n      case 'recent':\n        allQuestions.sort((a, b) => b.CreatedAt.getTime() - a.CreatedAt.getTime());\n        break;\n      case 'name':\n        allQuestions.sort((a, b) => a.Title.localeCompare(b.Title));\n        break;\n      case 'old':\n        allQuestions.sort((a, b) => a.CreatedAt.getTime() - b.CreatedAt.getTime());\n        break;\n    }\n\n    return allQuestions;\n  }\n\n  public async create(Title: string, Content: string, CreatedAt: string, CreatorID: number): Promise<void> {\n    this.questions.create({ data: { Title: Title, Content: Content, CreatedAt: CreatedAt, CreatorID: CreatorID } }).catch(err => console.log(err));\n  }\n\n  public async getOne(QuestionID: number): Promise<Questions> {\n    const question: Questions = await this.questions.findUnique({\n      where: { QuestionID: QuestionID },\n      include: { CreatedBy: true, Likes: { include: { User: true } }, Saved: { include: { User: true } }, _count: { select: { Replies: true } } },\n    });\n    return question;\n  }\n}\n"],"names":["QuestionsService","getAll","allQuestions","questions","findMany","include","CreatedBy","Likes","User","Saved","_count","select","Replies","orderBy","Title","likeQuestion","QuestionID","UserID","update","where","data","LikesNb","increment","then","likes","create","catch","err","console","log","unlikeQuestion","decrement","delete","QuestionID_UserID","saveQuestion","saved","unsaveQuestion","filtered","q","search","contains","mode","sort","a","b","CreatedAt","getTime","localeCompare","Content","CreatorID","getOne","question","findUnique","PrismaClient","Service"],"mappings":"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"}